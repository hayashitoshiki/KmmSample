// Generated by Dagger (https://dagger.dev).
package com.myapp.kmmsample.android.di;

import android.content.Context;
import com.myapp.local.PreferenceManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PreferencesComponentModule_ProvidePreferenceManagerFactory implements Factory<PreferenceManager> {
  private final Provider<Context> contextProvider;

  public PreferencesComponentModule_ProvidePreferenceManagerFactory(
      Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public PreferenceManager get() {
    return providePreferenceManager(contextProvider.get());
  }

  public static PreferencesComponentModule_ProvidePreferenceManagerFactory create(
      Provider<Context> contextProvider) {
    return new PreferencesComponentModule_ProvidePreferenceManagerFactory(contextProvider);
  }

  public static PreferenceManager providePreferenceManager(Context context) {
    return Preconditions.checkNotNullFromProvides(PreferencesComponentModule.INSTANCE.providePreferenceManager(context));
  }
}
